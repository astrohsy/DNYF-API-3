openapi: 3.0.0
info:
  title: DNYF Contacts Service API
  description: This is the API documentation of DNYF Contacts service. 
  version: 0.1.0
servers:
  - url: http://localhost:5005/contacts
paths:
  /{uid}/phone:
    get:
      summary: Get phone numbers. 
      parameters:
        - name: uid
          in: path
          required: trye
          schema:
            type: integer
          example: 1
          description: The user ID
      responses:
        '200':
          description: An array of phone numbers
          content:
            application/json:
              schema: 
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: string
                    example: ['1231231234', '2342342345']
    post:
      description: Add a phone number. 
      parameters:
        - name: uid
          in: path
          required: trye
          schema:
            type: integer
          example: 1
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: '1231231234'
      responses:
        '200':
          description: Verification status, uid, and phone number of the given uid
          content:
            application/json:
              schema: 
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      uid:
                        type: integer
                        example: 1
                      phone: 
                        type: string
                        example: '1231231234'
                      verified:
                        type: boolean
                        example: false
                      
  /{uid}/email:
      get:
        summary: Get emails. 
        parameters:
          - name: uid
            in: path
            required: trye
            schema:
              type: integer
            example: 1
            description: The user ID
        responses:
          '200':
            description: An array of emails
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        type: string
                      example: ['test1@mail.com', 'test2@mail.com']
      post:
        summary: Add an email. 
        parameters:
          - name: uid
            in: path
            required: trye
            schema:
              type: integer
            example: 1
            description: The user ID
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: 'test1@email.com'
        responses:
          '200':
            description: The verification status, uid, and email of the given uid
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        uid:
                          type: integer
                          example: 1
                        email: 
                          type: string
                          example: 'test1@email.com'
                        verified:
                          type: boolean
                          example: false
  
  /{uid}/phone/status:
    put:
      summary: Update phone verification status. 
      parameters:
        - name: uid
          in: path
          required: trye
          schema:
          type: integer
          example: 1
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: '1231231234'
                status:
                  type: boolean
                  example: true
      responses:
        '200':
          description: OK


  /{uid}/email/status:
    put:
      summary: Update email verification status. 
      parameters:
        - name: uid
          in: path
          required: trye
          schema:
          type: integer
          example: 1
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'test1@email.com'
                status:
                  type: boolean
                  example: true
      responses:
        '200':
          description: OK
  
  /phone/status:
    get:
      summary: Get phone number verification status. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                  example: "1231231234"
      responses:
        '200':
          description: Phone number verification status. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      verified:
                        type: boolean
                        example: true

  /email/status:
    get:
      summary: Get email verification status. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "test1@email.com"
      responses:
        '200':
          description: Email verification status. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      verified:
                        type: boolean
                        example: true