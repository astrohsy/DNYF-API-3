openapi: 3.0.0
info:
  title: DNYF Contacts Service API
  description: This is the API documentation of DNYF Contacts service. 
  version: 0.1.0
servers:
  - url: http://localhost:5005/contacts
paths:

  /:
    post:
        summary: Insert contact info for a user all at once
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  uid:
                    type: string
                    example: '1'
                  email:
                    type: string
                    example: 'test1@email.com'
                  phone_number:
                    type: string
                    example: '1231231234'
                  zip_code:
                    type: string
                    example: '12345'
        responses:
          '200':
            description: All contact info of the user
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        uid:
                          type: string
                          example: '1'
                        email:
                          type: string
                          example: 'test1@email.com'
                        phone_number:
                          type: string
                          example: '1231231234'
                        zip_code:
                          type: string
                          example: '12345'

# --------------------------------------------
  /{uid}/email:
      get:
        summary: Get email of a given user. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        responses:
          '200':
            description: Email of a given uid
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        email:
                          type: string
                          example: 'test@email.com'
      post:
        summary: Add an email to a user. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: 'test1@email.com'
        responses:
          '200':
            description: The verification status, uid, and email of the given uid
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        uid:
                          type: string
                          example: "1"
                        email: 
                          type: string
                          example: 'test1@email.com'
                        verified:
                          type: boolean
                          example: false
      
      put:
        summary: Update an email to a user. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: 'test1@email.com'
        responses:
          '200':
            description: OK
      
      delete:
        summary: Delete an user's email. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        responses:
          '200':
            description: OK

  /email/uid:
    get:
      summary: Get uid of a given email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "test1@email.com"
      responses:
        '200':
          description: Uid of the corresponding email.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      uid:
                        type: string
                        example: "1"

  /email/status:
    get:
      summary: Get email verification status. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "test1@email.com"
      responses:
        '200':
          description: Email verification status. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      verified:
                        type: boolean
                        example: true

    put:
      summary: Update email verification status. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'test1@email.com'
                status:
                  type: boolean
                  example: true
      responses:
        '200':
          description: OK

# --------------------------------------------

  /{uid}/phone_number:
      get:
        summary: Get phone number of a given user. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        responses:
          '200':
            description: Phone number of a given uid
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        phone_number:
                          type: string
                          example: '1231231234'
      post:
        summary: Add an phone number to a user. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  phone_number:
                    type: string
                    example: '1231231234'
        responses:
          '200':
            description: The verification status, uid, and phone number of the given uid
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        uid:
                          type: string
                          example: "1"
                        phone_number: 
                          type: string
                          example: '1231231234'
                        verified:
                          type: boolean
                          example: false
      
      put:
        summary: Update an phone number to a user. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  phone_number:
                    type: string
                    example: '1231231234'
        responses:
          '200':
            description: OK
      
      delete:
        summary: Delete an user's phone number. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        responses:
          '200':
            description: OK

  /phone/uid:
    get:
      summary: Get uid of a given phone number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  example: "1231231234"
      responses:
        '200':
          description: Uid of the corresponding phone number.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      uid:
                        type: string
                        example: "1"

  /phone/status:
    get:
      summary: Get phone number verification status. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  example: "1231231234"
      responses:
        '200':
          description: Phone number verification status. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      verified:
                        type: boolean
                        example: true

    put:
      summary: Update phone number verification status. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  example: '1231231234'
                status:
                  type: boolean
                  example: true
      responses:
        '200':
          description: OK

# --------------------------------------------

  /{uid}/zip:
      get:
        summary: Get zip code of a given user. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        responses:
          '200':
            description: Zip code of a given uid
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        zip_code:
                          type: string
                          example: '12345'
      post:
        summary: Add a zip code to a user. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  zip_code:
                    type: string
                    example: '12345'
        responses:
          '200':
            description: The verification status, uid, and zip code of the given uid
            content:
              application/json:
                schema: 
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        uid:
                          type: string
                          example: "1"
                        zip_code: 
                          type: string
                          example: '12345'
                        verified:
                          type: boolean
                          example: false
      
      put:
        summary: Update an zip code to a user. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  zip_code:
                    type: string
                    example: '12345'
        responses:
          '200':
            description: OK
      
      delete:
        summary: Delete an user's zip_code. 
        parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
        responses:
          '200':
            description: OK

  /phone/uid:
    get:
      summary: Get uids of a given zip code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                zip_code:
                  type: string
                  example: "12345"
      responses:
        '200':
          description: Uid of the corresponding phone number.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      uid:
                        type: array
                        items: 
                          type: string
                        example: [1, 3, 6]

  /{uid}/zip/status:
    get:
      summary: Get phone number verification status. 
      parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
      responses:
        '200':
          description: Zip code verification status. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      verified:
                        type: boolean
                        example: true

    put:
      summary: Update phone number verification status. 
      parameters:
          - name: uid
            in: path
            required: true
            schema:
              type: string
            example: "1"
            description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                zip_code:
                  type: string
                  example: '12345'
                status:
                  type: boolean
                  example: true
      responses:
        '200':
          description: OK